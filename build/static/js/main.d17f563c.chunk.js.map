{"version":3,"sources":["sample-food.js","firebase.js","components/Food.js","components/RandomFoods.js","components/AddFood.js","components/Edit.js","components/App.js","index.js"],"names":["foods","food1","name","food2","food3","food4","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Food","props","className","details","onClick","deleteFood","i","RandomFoods","renderRandomFoods","key","randomFoodsId","Object","keys","this","randomFoods","map","getRandomFood","React","Component","AddFood","nameRef","createRef","addFood","e","preventDefault","food","current","value","currentTarget","reset","onSubmit","type","ref","Edit","state","uid","owner","authHandler","authData","dbRef","getDatabase","get","then","snapshot","console","log","val","db","set","user","setState","data","catch","error","logout","a","auth","getAuth","signOut","onAuthStateChanged","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","accessToken","code","message","email","credentialFromError","loadSample","authenticate","App","sampleFood","Date","now","indexOf","removeRandomFood","length","f","randomProperty","appName","localStorageRef","localStorage","getItem","JSON","parse","obj","Math","random","firebaseRef","onValue","setItem","stringify","off","exact","path","to","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.d17f563c.chunk.js","sourcesContent":["const foods = {\n  food1: {\n    name: \"Makaroonilaatikko\",\n  },\n  food2: {\n    name: \"Lasagne\",\n  },\n  food3: {\n    name: \"Kasvissosekeitto\",\n  },\n  food4: {\n    name: \"Makkarakeitto\",\n  },\n};\n\nexport default foods;\n","import { initializeApp } from \"firebase/app\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCpJdjsSONNDflytbVETLkQm2Z0NrU323g\",\n  authDomain: \"ruokalista-f3217.firebaseapp.com\",\n  databaseURL:\n    \"https://ruokalista-f3217-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"ruokalista-f3217\",\n  storageBucket: \"ruokalista-f3217.appspot.com\",\n  messagingSenderId: \"100614683269\",\n  appId: \"1:100614683269:web:a09412cfbc8402686047ec\",\n};\n\n// Initialize Firebase\nconst firebase = initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\n\nconst Food = (props) => (\n  <li className=\"menu-food\">\n    <p className=\"food-name\">{props.details.name}</p>\n    <button className=\"delete-food\" onClick={() => props.deleteFood(props.i)}>\n      Poista ruoka\n    </button>\n  </li>\n);\n\nexport default Food;\n","import React from \"react\";\nimport Food from \"./Food\";\nclass RandomFoods extends React.Component {\n  renderRandomFoods = (key) => {\n    if (!this.props.foods[key]) return null;\n    return (\n      <Food\n        key={key}\n        i={key}\n        details={this.props.foods[key]}\n        deleteFood={this.props.deleteFood}\n      />\n    );\n  };\n\n  render() {\n    const randomFoodsId = Object.keys(this.props.randomFoods);\n    return (\n      <>\n        <ul>{randomFoodsId.map(this.renderRandomFoods)}</ul>\n        <button className=\"get-random\" onClick={this.props.getRandomFood}>\n          Arvo ruoka\n        </button>\n      </>\n    );\n  }\n}\n\nexport default RandomFoods;\n","import React from \"react\";\n\nclass AddFood extends React.Component {\n  nameRef = React.createRef();\n  addFood = (e) => {\n    e.preventDefault();\n    const food = { name: this.nameRef.current.value };\n    this.props.addFood(food);\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"add-food\" onSubmit={this.addFood}>\n        <input type=\"text\" name=\"name\" ref={this.nameRef} />\n        <button type=\"submit\">Lisää ruoka</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFood;\n","import React from \"react\";\nimport { getDatabase, ref, child, get, set } from \"firebase/database\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport Food from \"./Food\";\nimport AddFood from \"./AddFood\";\n\nclass Edit extends React.Component {\n  state = {\n    uid: null,\n    owner: null,\n  };\n  componentDidMount() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        // const uid = user.uid;\n        // console.log(\"***\");\n        // console.log(user);\n        this.authHandler({ user });\n        // ...\n      } else {\n        // User is signed out\n        // ...\n      }\n    });\n  }\n  authHandler = (authData) => {\n    // haetaan firebasesta\n    const dbRef = ref(getDatabase());\n    // get(child(dbRef, \"/owner\"))\n    get(dbRef)\n      .then((snapshot) => {\n        // if (snapshot.exists()) {\n        // console.log(authData);\n        console.log(snapshot.val());\n        console.log(snapshot.val().owner);\n        if (!snapshot.val().owner) {\n          console.log(\"No data available\");\n          const db = getDatabase();\n          // set(ref(db, \"owner\"), {\n          set(ref(db), {\n            owner: authData.user.uid,\n          });\n        }\n        // console.log(snapshot.val().data);\n        this.setState({\n          uid: authData.user.uid,\n          owner: snapshot.val().data || authData.user.uid,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  authenticate() {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // console.log(result);\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        // ...\n        // console.log(credential);\n        // console.log(token);\n        // console.log(user);\n        // user.uid\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n        console.log(error.message);\n      });\n  }\n  logout = async () => {\n    console.log(\"Logging out!\");\n    const auth = getAuth();\n    signOut(auth)\n      .then(() => {\n        // Sign-out successful\n        this.setState({ uid: null });\n      })\n      .catch((error) => {\n        // An error happened\n      });\n  };\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    if (!this.state.uid) {\n      return (\n        <button className=\"google\" onClick={this.authenticate}>\n          Kirjaudu Googlella\n        </button>\n      );\n    }\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Ainoastaan omistajalla on oikeus muokata listaa</p>\n          {logout}\n        </div>\n      );\n    }\n    return (\n      <>\n        <ul className=\"foods\">\n          {Object.keys(this.props.foods).map((key) => (\n            <Food\n              key={key}\n              i={key}\n              details={this.props.foods[key]}\n              deleteFood={this.props.deleteFood}\n            />\n          ))}\n        </ul>\n        <AddFood addFood={this.props.addFood} />\n        <button onClick={this.props.loadSample}>Lataa näyte</button>\n        {logout}\n      </>\n    );\n  }\n}\nexport default Edit;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport sampleFood from \"../sample-food\";\nimport firebase from \"../firebase\";\nimport { getDatabase, ref, set, onValue, off } from \"firebase/database\";\nimport RandomFoods from \"./RandomFoods\";\nimport Food from \"./Food\";\nimport AddFood from \"./AddFood\";\nimport Edit from \"./Edit\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // load randomfoods from localstorage\n    const appName = \"Ruokalista\";\n    var localStorageRef = localStorage.getItem(appName);\n    if (!localStorageRef) localStorageRef = \"{}\";\n    this.state = {\n      foods: {},\n      randomFoods: JSON.parse(localStorageRef),\n      appName: appName,\n    };\n  }\n  loadSample = () => {\n    this.setState({ foods: sampleFood });\n  };\n  addFood = (food) => {\n    const foods = { ...this.state.foods };\n    foods[`food${Date.now()}`] = food;\n    this.setState({ foods });\n  };\n  deleteFood = (key) => {\n    const foods = { ...this.state.foods };\n    delete foods[key];\n    if (Object.keys(this.state.randomFoods).indexOf(key) > -1) {\n      this.removeRandomFood(key);\n    }\n    this.setState({ foods });\n  };\n  // Randomfoods\n  randomProperty(obj) {\n    var keys = Object.keys(obj);\n    return keys[(keys.length * Math.random()) << 0];\n  }\n  getRandomFood = (key) => {\n    if (\n      Object.keys(this.state.randomFoods).length <\n      Object.keys(this.state.foods).length\n    ) {\n      var f = this.randomProperty(this.state.foods);\n      while (Object.keys(this.state.randomFoods).indexOf(f) > -1) {\n        f = this.randomProperty(this.state.foods);\n      }\n      const randomFoods = { ...this.state.randomFoods };\n      randomFoods[f] = f;\n      this.setState({ randomFoods });\n    }\n  };\n  removeRandomFood = (key) => {\n    const randomFoods = { ...this.state.randomFoods };\n    delete randomFoods[key];\n    this.setState({ randomFoods });\n  };\n\n  componentDidMount() {\n    // load randomfoods from localstorage\n    // const localStorageRef = localStorage.getItem(this.state.appName);\n    // if (localStorageRef)\n    //   this.setState({ randomFoods: JSON.parse(localStorageRef) });\n    // load from firebase\n    const db = getDatabase();\n    const firebaseRef = ref(db, `${this.state.appName}/foods`);\n    onValue(firebaseRef, (snapshot) => {\n      // console.log(\"load From Firebase\");\n      const data = snapshot.val();\n      if (\n        data !== null &&\n        data.foods !== this.state.foods\n        // data.foods !== undefined &&\n        // data.foods !== null &&\n        // data.foods !== this.state.foods\n      )\n        this.setState({ foods: data });\n    });\n  }\n\n  componentDidUpdate() {\n    // save to firebase\n    const db = getDatabase();\n    set(ref(db, this.state.appName), {\n      foods: this.state.foods,\n    });\n    //save to localstorage\n    localStorage.setItem(\n      this.state.appName,\n      JSON.stringify(this.state.randomFoods)\n    );\n  }\n  componentWillUnmount() {\n    const db = getDatabase();\n    const firebaseRef = ref(db, this.state.appName);\n    off(firebaseRef);\n  }\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <h1>Ruokalista</h1>\n              <RandomFoods\n                randomFoods={this.state.randomFoods}\n                getRandomFood={this.getRandomFood}\n                deleteFood={this.removeRandomFood}\n                foods={this.state.foods}\n              />\n            </Route>\n            <Route exact path=\"/edit\">\n              <Edit\n                foods={this.state.foods}\n                addFood={this.addFood}\n                loadSample={this.loadSample}\n                appName={this.state.appName}\n              />\n            </Route>\n          </Switch>\n          <nav className=\"main-nav\">\n            <ul>\n              <li>\n                <Link to=\"/\">Ruokalista</Link>\n              </li>\n              <li>\n                <Link to=\"edit/\">Muokkaa</Link>\n              </li>\n            </ul>\n          </nav>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n// import Router from \"./components/Router\";\nimport App from \"./components/App\";\nimport \"./css/style.css\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}